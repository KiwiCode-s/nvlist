
apply plugin: 'java-library'
apply plugin: 'maven-publish'

dependencies {
    api deps.styled_text_api
    api deps.tcommon_core
    
    implementation deps.guava
    implementation deps.tcommon_logging
    implementation deps.tcommon_prefsstore
    
    testImplementation deps.tcommon_test
}

publishing {
    publications {
        api(MavenPublication) {
            from components.java
            artifactId 'nvlist-api'
            pom.withXml {
                asNode().children().last() + pomLicenseConfig
            }  
        }
    }
}

bintray {
    publications = ['api']
}

// Check to see if we're API-compatible with a previous release
// To release a breaking change, set compatibleVersion to version
def compatibleVersion = '4.0.0'
if (version != compatibleVersion) {
    configurations {
        oldApi {
            transitive = false
        }
    }
    dependencies {
        oldApi 'nl.weeaboo.vn:nvlist-api:' + compatibleVersion
    }

    // Workaround for https://github.com/gradle/gradle/issues/7706
    // Prevents Gradle from replacing oldApi with the current version
    def oldGroup = project.group
    try {
        project.group = 'fake-group'
        configurations.oldApi.files // Resolve oldApi while our project is renamed and therefore not a valid replacement
    } finally {
        project.group = oldGroup
    }

    task japicmp(type: me.champeau.gradle.japicmp.JapicmpTask) {
        group = 'verification'

        oldClasspath = files(configurations.oldApi)
        newClasspath = files(jar)
        ignoreMissingClasses = true
        onlyModified = true
        failOnModification = true
        htmlOutputFile  = file("$buildDir/reports/japi.html")
    }
    check.dependsOn japicmp
}

javadoc {
    options {
        noDeprecatedList = true
        noHelp = true
        noIndex = true
        noTimestamp = true

        // Don't include the version number (causes too many unrelated changes)
        title = 'NVList'
    }
}
