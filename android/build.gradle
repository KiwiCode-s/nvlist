plugins {
    id 'com.android.library'
    // id 'com.android.application'
    id 'maven-publish'
}

apply from: "${buildToolsDir}/common-android.gradle"

configurations { natives }

dependencies {
    natives deps.gdx_android_natives

    implementation project(":nvlist-core")
    implementation deps.gdx_android
    implementation deps.slf4j_api
    runtimeOnly deps.slf4j_desktop
}

// Takes the native dependencies of the natives configuration, and extracts them to the proper libs/ folders
// so they get packed with the APK.
def copyAndroidNatives = tasks.register('copyAndroidNatives', Copy) {
    configurations.natives.files.each { jar ->
        def outputDir = null
        if (jar.name.endsWith("natives-arm64-v8a.jar")) outputDir = 'libs/arm64-v8a'
        if (jar.name.endsWith("natives-armeabi-v7a.jar")) outputDir = 'libs/armeabi-v7a'
        if (jar.name.endsWith("natives-armeabi.jar")) outputDir = 'libs/armeabi'
        if (jar.name.endsWith("natives-x86_64.jar")) outputDir = 'libs/x86_64'
        if (jar.name.endsWith("natives-x86.jar")) outputDir = 'libs/x86'

        if (outputDir != null) {
            copy {
                from zipTree(jar)
                into outputDir
                include "*.so"
            }
        }
    }
}
assemble.dependsOn copyAndroidNatives

// Run installed app through adb
def runInstalled = tasks.register('runInstalled', Exec) {
    def target = 'nl.weeaboo.vn.android/nl.weeaboo.vn.android.AndroidLauncher'
    doFirst {
        // Resolve ADB only when task is executed. This allows you to configure the nvlist-android project
        // without installing the Android SDK
        commandLine android.adbExecutable, 'shell', 'am', 'start', '-n', target
    }
}

// Install, then run debug build
tasks.register('runDebug') {
    dependsOn('installDebug', runInstalled)
}

afterEvaluate {
    publishing {
        publications {
            android(MavenPublication) {
                from components.release
                artifactId 'nvlist-android'

                pom.withXml {
                    asNode().children().last() + pomLicenseConfig
                }
            }
        }
    }

    bintray {
        publications = ['android']
    }
}
